const projectsData = [
  {
    title: "Predicting Boston House Prices with Feed Forward Neural Network",
    description: `Implemented Neural Network to solve regression task. In the result, achieved remarkable result, Mean Squared Error (MSE): 0.00457`,
    // imgSrc: "https://github.com/irfanmasoudi/anndl1/blob/main/result.png?raw=true",
    href: "https://gist.github.com/irfanmasoudi/68d6b16ad3b3f6639606bcf483773d47",
    github: "https://gist.github.com/irfanmasoudi/68d6b16ad3b3f6639606bcf483773d47",
    tech1: "Tensorflow",
    tech2: "Keras",
    tech3: "matplotlib",
    tech4: "Pandas",
  },
  {
    title: "Semantic Segmentation with U-Net for Cityscapes Dataset",
    description: `The Cityscapes Dataset focuses on semantic understanding of urban street scenes. The dataset contains captured images from front car camera and provides labeled mask (Ground truth).
    In the result, Test Accuracy: 0.8854, Test Mean Intersection over Union: 0.4042`,
    imgSrc: "",
    href: "https://gist.github.com/irfanmasoudi/ebd50ee09618f3efce69d4398a87ab86",
    github: "https://gist.github.com/irfanmasoudi/ebd50ee09618f3efce69d4398a87ab86",
    tech1: "Tensorflow",
    tech2: "Keras",
    tech3: "matplotlib",
    tech4: "Pandas",
  },
  {
    title: "Predicting Wine Quality with Neural Network",
    description: "Prevent overfitting: Early Stopping, Ridge Regression, Cross-validation (Hold-Out, K-Fold), Dropout. Final Model Test Performance MSE: 0.0127",
    imgSrc: "",
    href: "https://gist.github.com/irfanmasoudi/e5e2c0ab38fab7e84ab7c89ff4b68818",
    github: "https://gist.github.com/irfanmasoudi/e5e2c0ab38fab7e84ab7c89ff4b68818",
    tech1: "Tensorflow",
    tech2: "Scikit-learn",
    tech3: "matplotlib",
    tech4: "Pandas",
  },
  {
    title: "Human Activity Recognition with Timeseries Classification",
    description: `Implemented LSTM, Bidirectional LSTM (BiLSTM) and 1DCNN to predict human activities from mulitvaiate time series: x_axis, y_axis, z_axis. In the result, F1 score for LSTM: 0.4008, BiLSTM: 0.4385, 1DCNN: F1: 0.6301.`,
    imgSrc: "",
    href: "https://gist.github.com/irfanmasoudi/eb36cf6dbe035d50d217ca47f021cf85",
    github: "https://gist.github.com/irfanmasoudi/eb36cf6dbe035d50d217ca47f021cf85",
    tech1: "Tensorflow",
    tech2: "LSTM",
    tech3: "1DCNN",
    tech4: "Pandas",
  },
  {
    title: "Multivariate Timeseries Forecasting for Air Quality",
    description: `Implemented Bidirectional LSTM (BiLSTM) and 1DCNN to forcast Air Quality from mulitvaiate time series: x_axis, y_axis, z_axis. In the result, achieved Mean Squared Error: 0.00450.`,
    imgSrc: "",
    href: "https://gist.github.com/irfanmasoudi/a466949f3accb83779bcf49a1a571300",
    github: "https://gist.github.com/irfanmasoudi/a466949f3accb83779bcf49a1a571300",
    tech1: "Tensorflow",
    tech2: "BiLSTM",
    tech3: "1DCNN",
    tech4: "Pandas",
  },
  {
    title: "Classification task for South African Heart Disease Dataset",
    description: `Deployed several method for classification with comparation accuracy result, Linear Discriminant Analysis (LDA): 0.7527, LDA polynomial: 0.7101,
    Quadratic Discriminant Analysis: 0.6989, K-NN Standard Scaler: 0.7312, K-NN MinMax Scaler: 0.7527`,
    imgSrc: "",
    href: "https://gist.github.com/irfanmasoudi/9ce26f3d58ed5c34a6d210de182ab855",
    github: "https://gist.github.com/irfanmasoudi/9ce26f3d58ed5c34a6d210de182ab855",
    tech1: "Scikit-Learn",
    tech2: "Numpy",
    tech3: "matplotlib",
    tech4: "scipy.stats",
  },
  {
    title: `"DILLEMA" perform Image Classification and Semantic Segmantation`,
    description: "A framework to generate new test cases to uncover the faulty behavior of Image-based Deep Learning application (e.g. Autonomous driving). In the result, DILLEMA detects 24.8 % pixel-based misclassification of Semantic Segmentation task on Autonomous driving SHIFT dataset. Moreover, it also founds 53.3 % misclassification images in state-of-the-art neural networks for Classification task with ImageNet1K dataset.",
    imgSrc: "",
    href: "https://github.com/irfanmasoudi/thesis-source",
    github: "https://github.com/irfanmasoudi/thesis-source",
    tech1: "PyTorch",
    tech2: "Scikit-learn",
    tech3: "matplotlib",
    tech4: "Pandas",
  },
  {
    title: "Statistical Learning: Linear Regression",
    description: `Deployed Generelized linear regression to predict and inference the model from Advertising dataset. Perform Hypothesis testing as feature selection process. Implemented Ordinary Least Squared with R squared score: 0.897`,
    imgSrc: "",
    href: "https://gist.github.com/irfanmasoudi/41a1f914c664172168ba8828737e0b5f",
    github: "https://gist.github.com/irfanmasoudi/41a1f914c664172168ba8828737e0b5f",
    tech1: "Scikit-Learn",
    tech2: "Numpy",
    tech3: "matplotlib",
    tech4: "scipy.stats",
  },
  {
    title: "Classification Task Iris dataset with SVM",
    description: `Deployed Support Vector Machine (SVM) with F1-score 0.7999. Showing comparison result between LDA, QDA, KNN, and SVM.`,
    imgSrc: "",
    href: "https://gist.github.com/irfanmasoudi/a3e5f83412df394a2e6e77f07350b87d",
    github: "https://gist.github.com/irfanmasoudi/a3e5f83412df394a2e6e77f07350b87d",
    tech1: "Scikit-Learn",
    tech2: "Numpy",
    tech3: "matplotlib",
    tech4: "scipy.stats",
  },
  {
    title: "Clustering Task MNIST dataset with K-Means and DBSCAN",
    description: `Principal Component Analysis (PCA) to perform dimentionality reduction. In the result, Kmeans purity: 0.7896, DBSCAN purity: 0.5025 `,
    imgSrc: "",
    href: "https://gist.github.com/irfanmasoudi/a2134469d5700f44b57a097809f655a8",
    github: "https://gist.github.com/irfanmasoudi/a2134469d5700f44b57a097809f655a8",
    tech1: "Scikit-Learn",
    tech2: "Numpy",
    tech3: "matplotlib",
    tech4: "scipy.stats",
  },
  {
    title: "Leaf Image Classification",
    description: `Build the model to predict 15 leaf classes with a state-of-the-art model and architecture. Comparing the result and shows PRC score Inception-ResNet: 0.8867.`,
    imgSrc: "",
    href: "https://github.com/irfanmasoudi/anndl1",
    github: "https://github.com/irfanmasoudi/anndl1",
    tech1: "Tensorflow",
    tech2: "Keras",
    tech3: "Visualkeras",
    tech4: "Pandas",
  },
  {
    title: "Multivariate Time-series Forecasting",
    description: `Multivariate dataset that consists of 7 ordered features. Provide a prediction for each time step in the test prediction window. Bidirectional LSTM with two-layer, with window=600, stride=1 and telescope=864 has Root Mean Squared Error (RMSE): 4.0347.`,
    imgSrc: "",
    href: "https://github.com/irfanmasoudi/anndl2",
    github: "https://github.com/irfanmasoudi/anndl2",
    tech1: "Tensorflow",
    tech2: "Keras",
    tech3: "LSTM",
    tech4: "Pandas",
  },
  {
    title: "CNN (LeNet, VGG-like) for image classification",
    description: `Solve classification problem of MNIST and CIFAR-10 datasets. In the result the model to predict MNIST dataset got 
    F1 score: 0.9899. This project implemented VGG-like architecture in a simple model and achieved F1 score: 0.7866 for CIFAR-10`,
    imgSrc: "",
    href: "https://gist.github.com/irfanmasoudi/09043c6f79dc6eb64fce96e40f5dcec1",
    github: "https://gist.github.com/irfanmasoudi/09043c6f79dc6eb64fce96e40f5dcec1",
    tech1: "Tensorflow",
    tech2: "Keras",
    tech3: "Visualkeras",
    tech4: "Pandas",
  },
  {
    title: "Improve CNN performance with Transfer Learning and Fine Tuning",
    description: `Comparing re-training vs Fine tune MobileNetV2 architecture to solve minimum datasets availability`,
    imgSrc: "",
    href: "https://gist.github.com/irfanmasoudi/b3208ad62b45159166393489059ff374",
    github: "https://gist.github.com/irfanmasoudi/b3208ad62b45159166393489059ff374",
    tech1: "Tensorflow",
    tech2: "Keras",
    tech3: "matplotlib",
    tech4: "Pandas",
  },
  {
    title: "Statistical Learning: Bias and Variance Trade-off",
    description: `Understanding Bias and Variance theoretically, then show trade-off related to model complexity in the regression.`,
    imgSrc: "",
    href: "https://gist.github.com/irfanmasoudi/59fe2e3d673d056707bfd3af09e690aa",
    github: "https://gist.github.com/irfanmasoudi/59fe2e3d673d056707bfd3af09e690aa",
    tech1: "Scikit-Learn",
    tech2: "Numpy",
    tech3: "matplotlib",
    tech4: "Pandas",
  },
  {
    title: "Improve CNN performance with Image Augmentation",
    description: `Solve lack of dataset using Image Augmentation (Rotation, Flip, Translation, Brightness, Cntrass).`,
    imgSrc: "",
    href: "https://gist.github.com/irfanmasoudi/83c496a6383324b9e30428f7e37773ee",
    github: "https://gist.github.com/irfanmasoudi/83c496a6383324b9e30428f7e37773ee",
    tech1: "Tensorflow",
    tech2: "Keras",
    tech3: "matplotlib",
    tech4: "Pandas",
  },
  {
    title: "Feature Selection Process of MPG (Miles per Gallon) dataset",
    description: `Implemented feature selection with Forward and Backward process. Perfrom hyperparameter selection using cross-validation (Hold-out and K-Fold). In the result, R squared: 0.8462.`,
    imgSrc: "",
    href: "https://drive.google.com/file/d/1vR2NCCwj2Zm6EtU8UvzRWTHZRI3J1ljf/view?usp=sharing",
    github: "https://drive.google.com/file/d/1vR2NCCwj2Zm6EtU8UvzRWTHZRI3J1ljf/view?usp=sharing",
    tech1: "Scikit-Learn",
    tech2: "Numpy",
    tech3: "matplotlib",
    tech4: "scipy.stats",
  },
  {
    title: "Generative Adversarial Networks with MNIST",
    description: `Generate MNIST image from sampled data. Build from scratch Generator and Descriminator model. Create custom loss function, metrics for GAN.`,
    imgSrc: "",
    href: "https://gist.github.com/irfanmasoudi/c2e9191fe5a036d20456c66b9ad2f66b",
    github: "https://gist.github.com/irfanmasoudi/c2e9191fe5a036d20456c66b9ad2f66b",
    tech1: "Tensorflow",
    tech2: "Keras",
    tech3: "matplotlib",
    tech4: "Pandas",
  },
  {
    title: "Building heatmaps with FullyCNN",
    description: `Given the high spatial dimention of Sealion population, then classifies sealion type of class by create a heatmaps to show the result.
    Instead of having categorical result with fully connected layer as the output model, this model use fully Convolutional NN.`,
    imgSrc: "",
    href: "https://gist.github.com/irfanmasoudi/69b595f62b25e37aac6036f11809d52e",
    github: "https://gist.github.com/irfanmasoudi/69b595f62b25e37aac6036f11809d52e",
    tech1: "Tensorflow",
    tech2: "Keras",
    tech3: "matplotlib",
    tech4: "Pandas",
  },
];

export default projectsData;
